worker_processes 4; #nginx worker 数量
error_log logs/error.log; #指定错误日志文件路径

worker_rlimit_nofile 65535;

events {
    use epoll;
    worker_connections 65535;
}

http {	
		
		#lua模块路径，其中”;;”表示默认搜索路径，默认到/usr/servers/nginx下找  
		lua_package_path "/usr/local/openresty/lua/?.lua; /usr/local/openresty/lualib/?.lua;;";  #lua 模块
		lua_package_cpath "/usr/local/openresty/lualib/?.so;;";  #c模块
		
		proxy_connect_timeout 5;  
		proxy_read_timeout 60;  
		proxy_send_timeout 5;  
		proxy_buffer_size 16k;  
		proxy_buffers 4 64k;  
		proxy_busy_buffers_size 128k;  
		proxy_temp_file_write_size 128k;  
		proxy_temp_path /home/temp_dir;  
		proxy_cache_path /home/cache levels=1:2 keys_zone=cache_one:50m inactive=20m max_size=30g;
			
        server {
                #监听端口，若你的6699端口已经被占用，则需要修改
                listen 80;
				server_name e.dangdang.com;
						
				#first match ngx location
				#set $template_location "/usr/local/templates";  
				#then match root read file
				#set $template_root "/usr/local/templates";
				
				#模板路径
				root /usr/local/templates;

                location = /sum {
					internal;   
					content_by_lua_block {
						local args = ngx.req.get_uri_args()
						ngx.print(tonumber(args.a) + tonumber(args.b))
					}             
				}


				location = /subduction {
					internal; 
					content_by_lua_block {
						local args = ngx.req.get_uri_args()
						ngx.print(tonumber(args.a) - tonumber(args.b))
					}
				}   
                
				
				location = /app/test {
						content_by_lua_block {
								local res1, res2 = ngx.location.capture_multi({
									{"/sum", {args={a=3, b=8}}},
									{"/subduction", {args={a=3, b=8}}}
						})
								ngx.say("status:", res1.status, " response:", res1.body)
								ngx.say("status:", res2.status, " response:", res2.body)
						}
				}		
				
				
				location /lua_module {  
					default_type 'text/html';  
					lua_code_cache on;  
					content_by_lua_file /usr/local/openresty/lua/test_module.lua;  
				}  
				
				location ~ /lua_cjson {  
				   default_type 'text/html';  
				   lua_code_cache on;
				   charset utf-8;    
				   content_by_lua_file /usr/local/openresty/lua/test_cjson.lua;
				}  
				
				location ~ /lua_dkjson {  
				   default_type 'text/html';  
				   lua_code_cache on;
				   charset utf-8;  
				   content_by_lua_file /usr/local/openresty/lua/test_dkjson.lua;  
				} 
				
				location /lua_http_1 {  
   					default_type 'text/html';  
   					lua_code_cache on;  
   					content_by_lua_file /usr/local/openresty/lua/test_http_1.lua;  
				}
			
				location /lua_template_1 {  
					default_type 'text/html';  
					lua_code_cache on;  
					content_by_lua_file /usr/local/openresty/lua/test_template_1.lua;  
				}
				
				location /lua_template_2 {  
    					default_type 'text/html';  
    					lua_code_cache on;  
    					content_by_lua_file /usr/local/openresty/lua/test_template_2.lua;  
				}				
				
				location /lua_template_3 {  
    					default_type 'text/html';  
    					lua_code_cache on; 
					charset utf-8; 
    					content_by_lua_file /usr/local/openresty/lua/test_template_3.lua;  
				} 
				
				location /lua_template_4 {  
					default_type 'text/html';
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/test_template_4.lua;  
				}

				location /getMedia {
					internal;
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8;
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/getMedia.lua;  
				}
				
				location /getMediaCategorySaleTopn {
					internal;
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8;
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/getMediaCategorySaleTopn.lua; 
				}
				
				location /getViewAlsoView {
					internal;
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8;
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/getViewAlsoView.lua; 
				}
				
				location /hotChannel {
					internal;
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8;
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/hotChannel.lua; 
				}
				
				location /getBuyAlsoBuy {
					internal;
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8;
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/getBuyAlsoBuy.lua; 
				}
				
				location /queryArticleListV2 {
					internal;
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8;
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/queryArticleListV2.lua; 
				}
				
				location /getMediaRewardRecord {
					internal;
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8;
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/getMediaRewardRecord.lua; 
				}
				
				location /getMediasByAuthorExceptThis {
					internal;
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8;
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/getMediasByAuthorExceptThis.lua; 
				}

				location /product_page.html {	
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8; 
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/product_page.lua;   
				}

				location /original_single_page.html {	
					default_type 'text/html';
					index  index.html index.htm index.php;  
					proxy_cache cache_one;  
					proxy_cache_valid 200 302 1h;  

					proxy_cache_key $host$uri$is_args$args;   
					proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";#不处理后端服务器返回的指定响应头  
					expires 30d;  
					proxy_set_header Host $host;  
					proxy_set_header X-Real-IP $remote_addr;  
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					charset utf-8; 
					lua_code_cache on; 
					content_by_lua_file /usr/local/openresty/lua/original_single_page.lua; 
				}				
			
				location /test_params {
					proxy_set_header X-Real-IP $remote_addr;
					proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
					proxy_set_header Host $host;
					default_type 'text/html';
					charset utf-8; 
					content_by_lua_block {
						local args = ngx.req.get_uri_args()
						if table.getn(args) == 0 then
							ngx.say("prams is empty")
						end
						
						if args["mediaType"]  then
							ngx.say("params include mediaType")
						end

						ngx.say(type(args).."</br>")
						for k,v in pairs(args) do
							ngx.say("[GET] key:", k, " v:", v)
						end
					}
                }

				location /test_cookie {
					default_type 'text/html';
					lua_code_cache on; 
					charset utf-8; 
					content_by_lua_file /usr/local/openresty/lua/test_cookie.lua; 
				}
				
				location /test_redis {  
					default_type 'text/html';  
					lua_code_cache on;  
					content_by_lua_file /usr/local/openresty/lua/test_redis.lua;  
				}  
				
				location /test_redis_1 {  
					default_type 'text/html';  
					lua_code_cache on;  
					content_by_lua_file /usr/local/openresty/lua/test_redis_1.lua;  
				} 
			
        }
}
